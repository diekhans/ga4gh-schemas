@namespace("org.ga4gh.models")
/**
This protocol defines annotations on GA4GH reference genomes. 
*/
protocol Annotation {

import idl "common.avdl";

/**
Categorical annotation of a single region
*/
record AnnotatedRegion {
  /** 
  The region being described
  */
  Region region;
 
  /**
  External descriptions (Sequence Ontology...)
  */
  array<OntologyTerm> description = [];

  /**
  Other annotations (denormalised)
  */
  map<string> annotations;
}

/**
Numerical annotation along a region
*/
record Wiggle {
  /** 
  The region being described
  Note that we are fusing parts of BedGraph and Wig syntax.
  The region is being fully annotated, but can be divided into bins.
  If you have gaps, you need to define a sequence of such Wiggles. 
  */
  Region region;
 
  /**
  The values associated to this region.
  If this list contains _count_ elements, then the region is divided
  as cleanly as possible into _count_ bins of equal width. 
  We thus define a numerical function:

  value(position):
    if position < start or position >= start + length:
      return None
    else:
      return array[floor((position - start)*count/length)]
  */ 
  array<float> values = [];
}

/**
GFFObject
*/
record GFFRegion {
  /**
  Basic data
  */
  AnnotatedRegion annotation;

  /**
  ID
  */
  ExternalIdentifier ID;

  /**
  Parent 
  */
  ExternalIdentifier parent;

  /**
  Derives from 
  */
  ExternalIdentifier derives_from;

  /**
  Components 
  */
  array<GFFRegion> components;
}

/**
Coding sequence (CDS)
*/
record CDS {
  /** 
  Basic data 
  */
  GFFRegion gff;
 
  /**
  Phase of the first base of the CDS: 
  0: first base of codon
  1: second base of codon
  2: third base of codon
  -1: not in CDS
  */
  int phase;
}

/**
Exon
*/
record Exon {
  /**
  Basic data 
  */
  GFFRegion gff;

  /**
  The coding sequence(s) of the exon.
  In 99% of cases there is exactly one CDS per exon, but in the case of frameshifts
  you have multiple CDSs per exon (http://www.sequenceontology.org/gff3.shtml).
  */
  array<CDS> CDSs = [];
}

/** 
Transcript
*/
record Transcript {
  /**
  ID 
  */
  ExternalIdentifier ID;

  /**
  Parent gene(s)
  In 99% of cases, 1 transcript => 1 gene, but not in the case of
  trans-spliced genes, poly-cistronic transcripts or fusion transcripts
  */
  array<ExternalIdentifier> parents = [];

  /**
  Components 
  Typically primary_transcript and spliced_leader_RNA for trans-splicing events.
  */
  array<Transcript> components;

  /**
  Exons 
  */
  array<Exon> exons = [];

  /**
  Annotations (Any SO object that is not explicitly represented by a record)
  - Alignment exceptions
  - Intron types
  - Start and end codon
  - etc.
  */
  array<AnnotatedRegion> annotation = [];

  /**
  External descriptions (Sequence Ontology...)
  */
  array<OntologyTerm> description = [];

  /**
  Other annotations (denormalised)
  */
  map<string> annotations;
}

/**
Gene
*/
record Gene {
  /**
  ID 
  */
  ExternalIdentifier ID;

  /**
  Parent dataset
  */
  ExternalIdentifier source;

  /**
  Transcripts
  */
  array<Transcript> transcripts = [];

  /**
  External descriptions (Gene Ontology...)
  */
  array<OntologyTerm> description = [];

  /**
  Other annotations (denormalised)
  */
  map<string> annotations;
}

}
